name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend Tests and Build
  backend:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Run backend linting
      run: |
        cd backend
        npm run lint || echo "Backend linting not configured"
    
    - name: Run backend tests
      run: |
        cd backend
        npm test || echo "Backend tests not configured"
      env:
        MONGO_URI: mongodb://localhost:27017/quizverse-test
        JWT_SECRET: test-secret
        NODE_ENV: test

  # Frontend Tests and Build
  frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run frontend linting
      run: |
        cd frontend
        npm run lint
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        VITE_API_BASE_URL: http://localhost:5000/api
        VITE_GOOGLE_CLIENT_ID: test-client-id
        VITE_NODE_ENV: production
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/dist/

  # Security Audit
  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Audit backend dependencies
      run: |
        cd backend
        npm audit --audit-level=moderate
    
    - name: Audit frontend dependencies
      run: |
        cd frontend
        npm audit --audit-level=moderate

  # Docker Build (only on main branch)
  docker:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build backend Docker image
      run: |
        cd backend
        docker build -t quizverse-backend:latest .
    
    - name: Build frontend Docker image
      run: |
        cd frontend
        docker build -t quizverse-frontend:latest .
    
    - name: Test Docker compose
      run: |
        echo "Testing Docker compose configuration..."
        docker-compose config